{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","LoadImages","Search_Val","state","Search","PageNo_Val","pageNo","fetch","then","response","json","array","photos","photo","map","jsonpic","Path","farm","server","id","secret","className","src","this","setState","picture","bind","HandleChange","e","target","value","Delay","timer","callback","ms","clearTimeout","setTimeout","pictures","onChange","placeholder","onKeyUp","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAGqBA,E,kDAEnB,aAAe,IAAD,8BACZ,gBAYFC,WAAa,WACX,IAEMC,EAAa,UAAY,EAAKC,MAAMC,OACpCC,EAAa,EAAKF,MAAMG,OAE9BC,MAJgB,0IAIAL,EAAa,YAAcG,GACxCG,MAAK,SAAUC,GACd,OAAOA,EAASC,UAGjBF,KAAK,SAAUE,GACd,IAAIC,EAAQD,EAAKE,OAAOC,MAAMC,KAAI,SAACC,GACjC,IAAIC,EAAO,eAAiBD,EAAQE,KAAO,qBAAuBF,EAAQG,OAAS,IAAMH,EAAQI,GAAK,IAAMJ,EAAQK,OAAS,OAC7H,OACE,qBAAKC,UAAU,WAAWC,IAAKN,OAInCO,KAAKC,SAAS,CAAEC,QAASd,KACzBe,KATI,kBAxBI,EAoCdC,aAAe,SAACC,GACd,EAAKJ,SAAS,CAAEpB,OAAQwB,EAAEC,OAAOC,SArCrB,EAwCdC,MAAS,WACP,IAAIC,EAAQ,EACZ,OAAO,SAAUC,EAAUC,GACzBC,aAAaH,GACbA,EAAQI,WAAWH,EAAUC,IAJxB,GAtCP,EAAK/B,MAAQ,CACXC,OAAQ,SACRE,OAAQ,IACR+B,SAAU,IALA,E,qDASd,WACEd,KAAKtB,e,oBA4CP,WAAU,IAAD,OACP,OAEE,sBAAKoB,UAAU,MAAf,UAEE,yBAAQA,UAAU,aAAlB,UAEE,+CAEA,4BACE,uBACEA,UAAU,aACViB,SAAUf,KAAKI,aACfY,YAAY,gBACZC,QAAS,kBAAM,EAAKT,MAAM,WACxBR,KAAKtB,cACLyB,KAAK,GAAO,aAMpB,qBAAKL,UAAU,SAAf,SACGE,KAAKpB,MAAMsB,iB,GA/EWgB,aCSlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bc23f66a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nexport default class App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      Search: \"Recent\",\n      pageNo: 1000,\n      pictures: [],\n    };\n  }\n\n  componentDidMount() {\n    this.LoadImages();\n  }\n\n  LoadImages = () => {\n    const key = '36f2bcfe9679e769f97297635a7c23e8';\n    const Def_URL = 'https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=' + key + '&format=json&nojsoncallback=1';\n    const Search_Val = '&tags= ' + this.state.Search;\n    const PageNo_Val = this.state.pageNo\n\n    fetch(Def_URL + Search_Val + '&per_page' + PageNo_Val)\n      .then(function (response) {\n        return response.json();\n      })\n\n      .then(function (json) {\n        let array = json.photos.photo.map((jsonpic) => {\n          var Path = 'https://farm' + jsonpic.farm + '.staticflickr.com/' + jsonpic.server + '/' + jsonpic.id + '_' + jsonpic.secret + '.jpg';\n          return (\n            <img className=\"pictures\" src={Path}></img>\n          )\n        })\n\n        this.setState({ picture: array });\n      }.bind(this))\n  }\n\n  HandleChange = (e) => {\n    this.setState({ Search: e.target.value });\n  }\n\n  Delay = (function () {\n    var timer = 0;\n    return function (callback, ms) {\n      clearTimeout(timer);\n      timer = setTimeout(callback, ms);\n    };\n  })();\n\n\n  // availablescrollArea = (function () {\n  //   return getScrollTop() < getDocumentHeight() - window.innerHeight;\n  // })\n\n\n  render() {\n    return (\n\n      <div className=\"App\">\n\n        <header className=\"App-header\">\n\n          <h1>Search Photos</h1>\n\n          <p>\n            <input\n              className=\"search-bar\"\n              onChange={this.HandleChange}\n              placeholder=\"Search Photos\"\n              onKeyUp={() => this.Delay(function () {\n                this.LoadImages();\n              }.bind(this), 100)} >\n            </input>\n          </p>\n\n        </header>\n\n        <div className=\"Images\">\n          {this.state.picture}\n        </div>\n\n      </div>\n\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}